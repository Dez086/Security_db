# 1) Activate commented options as needed.
# 2) Export previously the PYTHONPATH environment variable needed, e.g: 
#       $ export PYTHONPATH='layers/custom_packages/python'
# 3) Then run the following command in the same folder of this file:
#       $ pytest

[pytest]
minversion = 6.2.4

# Files considered as test modules (default: test_*.py and *_test.py)
# python_files = *_test.py

#   -r chars            show extra test summary info as specified by chars:
#                       (f)ailed, (E)rror, (s)kipped, (x)failed, (X)passed,
#                       (p)assed, (P)assed with output, (a)ll except passed
#                       (p/P), or (A)ll. (w)arnings are enabled by default
#                       (see --disable-warnings), 'N' can be used to reset
#                       the list. (default: 'fE').
addopts = -ra -q

# Change to classic or count output in case of an unexpected output error.
# console_output_style = classic # count

# Dumps the tracebacks of all threads if a test takes longer.
# faulthandler_timeout= 5 # seconds

# To ignore deprecation warnings and turn all other warnings into errors.
# filterwarnings =
#    error
#    ignore::DeprecationWarning

# To store log info into a file (overwrites at each run test session).
log_cli = True
log_file = pytest.log
log_file_level = INFO
log_file_format = "%(asctime)s %(levelname)s %(message)s"
log_file_date_format ="%Y-%m-%d %H:%M:%S"

# https://docs.pytest.org/en/stable/reference.html#confval-norecursedirs
# Set the directory basename patterns to avoid when recursing for test discovery. 
# Default patterns are:
# '*.egg', '.*', '_darcs', 'build', 'CVS', 'dist', 'node_modules', 'venv', '{arch}'.
# norecursedirs = .svn _build tmp*

# Classes considered for test collection (default: class prefixed with Test)
#python_classes = *Suite

# Test functions and methods considered for tests (default: prefixed with test).
# python_functions = *_test

# Add the specified OPTS to the set of command line arguments:
#  --durations=N        Show N slowest setup/test durations (N=0 for all).
#  --rootdir=ROOTDIR    Define root directory for tests (default: current dir of this file).
# e.g.: exit after 2 failures, report fail info, any warnings encountered while parsing
# the `pytest` section of the configuration file raise errors.
# addopts = --maxfail=2 -rf --strict-config 

# List of directories that should be searched for tests.
testpaths = tests

# Set environment variables for testing in test files using:
#   import pytest
#   @pytest.fixture
#   def mock_env_user(monkeypatch):
#       monkeypatch.setenv("ENV", "development")
