

Install using conda navigator

https://matplotlib.org/users/installing.html
https://matplotlib.org/tutorials/introductory/pyplot.html

https://github.com/rougier/matplotlib-tutorial

*******************************************************************************
import numpy as np
import matplotlib.pyplot as plt

plt.plot(x, y, "-b")			        # style and color
# https://matplotlib.org/api/_as_gen/matplotlib.lines.Line2D.html
# https://matplotlib.org/api/colors_api.html#module-matplotlib.colors
plt.plot(x, y, color='green', marker='o', linestyle='dashed', linewidth=2,
         markersize=12, label='leyend')
    
plt.xlabel("Time (years)", fontsize=14, color='red')
# text properties: https://matplotlib.org/stable/tutorials/text/text_props.html
plt.ylabel("Fraction Remaining")
plt.title("Exponential Decay of C-14")

plt.axis([[xmin, xmax, ymin, ymax]])    # specifies the viewport of the axes.
plt.xlim(0, 28650)              #Get or set the x limits of the current axes.
plt.ylim(bottom, top)           # ylim(top=3); bottom, top = ylim()
plt.yscale("log")               # {"linear", "log", "symlog", "logit", ...}
plt.show()

plot(x1, y1, 'bo')              # Plotting multiple sets of data
plot(x2, y2, 'go')
plot(a[0], a[1:])
plot(x1, y1, 'g^', x2, y2, 'g-')

plt.plot(x, y1, color='red', linestyle='dashed', label='C-14', linewidth=2.0)
# line-properties: lines = plt.plot([1, 2, 3]); plt.setp(lines)
plt.plot(x, y2, color='green', linestyle='solid', label='Ra-226')
plt.legend(loc='upper right')

Figure[ ax1, ax2,... ]          # A figure (entire window) have axes.
All plotting functions apply to the current axes.

plt.figure([figsize=(9, 3)])                  # Weight, heigth
plt.suptitle("All in One")                  # To avoid external axis
plt.subplot(nrows, ncols, index, **kwargs)  # Activate a subplot with position.


plt.text(60, .025, r'$\mu=100,\ \sigma=15$')# Place texte in data coordinates.
https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.annotate.html
plt.axis(xmin, xmax, ymin, ymax)            # Limits of the grid
plt.grid(True)                              # Show/hide grid
plt.close()                                 # To release memory.

*** Plotting with keyword strings
data = {'a': np.arange(50),
        'c': np.random.randint(0, 50, 50),
        'd': np.random.randn(50)}
data['b'] = data['a'] + 10 * np.random.randn(50)
data['d'] = np.abs(data['d']) * 100
plt.scatter('a', 'b', c='c', s='d', data=data)
plt.xlabel('entry a')
plt.ylabel('entry b')
plt.show()

*** Plotting with categorical variables
names = ['group_a', 'group_b', 'group_c']
values = [1, 10, 100]
plt.figure(figsize=(9, 3))
plt.subplot(131)
plt.bar(names, values)
plt.subplot(132)
plt.scatter(names, values)
plt.subplot(133)
plt.plot(names, values)
plt.suptitle('Categorical Plotting')
plt.show()

*** Multiple figures (windows) with multiple subplots (graphics).
plt.figure(1)                # the first figure
plt.subplot(211)             # the first subplot in the first figure
plt.plot([1, 2, 3])
plt.subplot(212)             # the second subplot in the first figure
plt.plot([4, 5, 6])
plt.figure(2)                # a second figure
plt.plot([4, 5, 6])          # creates a subplot() by default
plt.figure(1)                # figure 1 current; subplot(212) still current
plt.subplot(211)             # make subplot(211) in figure1 current
plt.title('Easy as 1, 2, 3') # subplot 211 title

*** Mathematical expressions
plt.title(r'$\sigma_i=15$')     # TeX expression
https://matplotlib.org/stable/tutorials/text/mathtext.html
https://matplotlib.org/stable/tutorials/text/usetex.html

*** Types of plots
plt.scatter(x, y, 7, color='magenta')
plt.hist(data_list, bins=10, range=(0, 100), rwidth=10, edgecolor='black')
